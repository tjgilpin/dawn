<script src="{{ 'tippy.min.js' | asset_url }}" defer="defer"></script>

{% comment %} {{ 'section-main-product.css' | asset_url | stylesheet_tag }} {% endcomment %}
{{ 'component-badge.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}
{{ 'component-rte.css' | asset_url | stylesheet_tag }}
{{ 'component-slider.css' | asset_url | stylesheet_tag }}

<link rel="stylesheet" href="{{ 'component-cart-notification.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-deferred-media.css' | asset_url }}" media="print" onload="this.media='all'">

<script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>

{%- assign first_3d_model = product.media | where: "media_type", "model" | first -%}
{%- if first_3d_model -%}
  {{ 'component-product-model.css' | asset_url | stylesheet_tag }}
  <link id="ModelViewerStyle" rel="stylesheet" href="https://cdn.shopify.com/shopifycloud/model-viewer-ui/assets/v1.0/model-viewer-ui.css" media="print" onload="this.media='all'">
  <link id="ModelViewerOverride" rel="stylesheet" href="{{ 'component-model-viewer-ui.css' | asset_url }}" media="print" onload="this.media='all'">
{%- endif -%}

{% assign tracklist = product.metafields.global-commerce.tracklist-json.value %}

{%- if tracklist -%}
  <link id="TrackListStyle" rel="stylesheet" href="{{ 'component-track-list.css' | asset_url }}" media="print" onload="this.media='all'">
{%- endif -%}

<section class="container">
  <div class="text-primary text-sm text-xs text-base text-lg text-xl" />
  <div class="px-4 mx-auto mt-8 sm:px-6 lg:px-8">

    <div class="lg:grid lg:grid-cols-6 lg:auto-rows-min lg:gap-x-8">

      <!-- Image Gallery --->
      {% comment %} {%- case section.settings.layout -%}
        {%- when 'images_left' -%}
      <div class="mt-8 product__media-wrapper lg:mt-0 lg:col-start-1 lg:col-span-3 lg:row-start-1 lg:row-span-3">
        {%- when 'images_right' -%}
      <div class="mt-8 product__media-wrapper lg:mt-0 lg:col-start-4 lg:col-span-3 lg:row-start-1 lg:row-span-3">
        {%- when 'stacked' -%}
      <div class="mt-8 product__media-wrapper lg:mt-0 lg:col-start-1 lg:col-span-6 lg:row-start-1 lg:row-span-3">
      {%- endcase -%} {% endcomment %}

    {%- case section.settings.layout -%}
        {%- when 'images_left' -%}
            <div class="product__media-wrapper media-left">
        {%- when 'images_right' -%}
            <div class="product__media-wrapper media-right">
        {%- when 'stacked' -%}
            <div class="product__media-wrapper media-top media-stacked">
    {%- endcase -%}

        <slider-component class="slider-mobile-gutter">
          <a class="skip-to-content-link button visually-hidden" href="#ProductInfo-{{ section.id }}">
            {{ "accessibility.skip_to_product_info" | t }}
          </a>
          {% comment %} <ul class="flex flex-row flex-wrap product__media-list grid--peek list-unstyled slider slider--mobile" role="list"> {% endcomment %}
          <ul class="mx-auto product__media-list grid--peek list-unstyled slider slider--mobile" role="list">
            {%- if product.selected_or_first_available_variant.featured_media != null -%}
              {%- assign media = product.selected_or_first_available_variant.featured_media -%}
              <li class="product__media-item grid__item slider__slide{% if media.media_type != 'image' %} product__media-item--full{% endif %}" data-media-id="{{ section.id }}-{{ media.id }}">
                {% render 'product-thumbnail', media: media, position: 'featured', loop: section.settings.enable_video_looping, modal_id: section.id %}
              </li>
            {%- endif -%}
            {%- for media in product.media -%}
              {%- unless media.id == product.selected_or_first_available_variant.featured_media.id -%}
                <li class="product__media-item grid__item slider__slide{% if media.media_type != 'image' %} product__media-item--full{% endif %}" data-media-id="{{ section.id }}-{{ media.id }}">
                  {% render 'product-thumbnail', media: media, position: forloop.index, loop: section.settings.enable_video_looping, modal_id: section.id %}
                </li>
              {%- endunless -%}
            {%- endfor -%}
          </ul>
          <div class="slider-buttons slider-buttons--overlay no-js-hidden{% if product.media.size < 2 %} small-hide{% endif %}">
            <div class="slider-counter caption">
              <span class="slider-counter--current">1</span>
              <span aria-hidden="true"> / </span>
              <span class="visually-hidden">{{ 'accessibility.of' | t }}</span>
              <span class="slider-counter--total">{{ product.media.size }}</span>
            </div>
            <button type="button" class="slider-button slider-button--prev" name="previous" aria-label="{{ 'accessibility.previous_slide' | t }}">{% render 'icon-caret' %}</button>
            <button type="button" class="slider-button slider-button--next" name="next" aria-label="{{ 'accessibility.next_slide' | t }}">{% render 'icon-caret' %}</button>
          </div>
        </slider-component>
        {%- if first_3d_model -%}
          <button
            class="button button--full-width product__xr-button"
            type="button"
            aria-label="{{ 'products.product.xr_button_label' | t }}"
            data-shopify-xr
            data-shopify-model3d-id="{{ first_3d_model.id }}"
            data-shopify-title="{{ product.title | escape }}"
            data-shopify-xr-hidden
          >
            {% render 'icon-3d-model' %}
            {{ 'products.product.xr_button' | t }}
          </button>
        {%- endif -%}
      </div><!-- end of images block -->

      <!-- Product Details --->
      {%- case section.settings.layout -%}
        {%- when 'images_left' -%}
      <div id="ProductInfo-{{ section.id }}"class="product__info-container lg:col-start-4 lg:col-span-3 {% if section.settings.enable_sticky_info %} product__info-container--sticky{% endif %}">
        <div class="lg:grid lg:grid-cols-1 lg:auto-rows-min lg:gap-x-8">
          <div class="lg:col-span-1">
        {%- when 'images_right' -%}
      <div id="ProductInfo-{{ section.id }}"class="product__info-container lg:col-start-1 lg:col-span-3 {% if section.settings.enable_sticky_info %} product__info-container--sticky{% endif %}">
        <div class="lg:grid lg:grid-cols-1 lg:auto-rows-min lg:gap-x-8">
          <div class="lg:col-span-1">
        {%- when 'stacked' -%}
      <div id="ProductInfo-{{ section.id }}"class="product__info-container lg:col-start-1 lg:col-span-6 {% if section.settings.enable_sticky_info %} product__info-container--sticky{% endif %}">
        <div class="grid grid-cols-2 lg:auto-rows-min lg:gap-x-8">
          <div class="col-span-1">
      {%- endcase -%}
            {%- liquid
              assign product_form_id = 'product-form-' | append: section.id
            -%}
            {%- for block in section.blocks -%}
              {%- case block.type -%}
                {%- when '@app' -%}
                  {% render block %}
                {%- when 'separator' -%}
                  {%- if section.settings.layout == 'stacked' -%}
                    </div>
                    <div class="col-span-1">
                  {%- endif -%}
                {%- when 'text' -%}
                  <p class="py-{{ block.settings.vertical_padding }} font-bold text-{{ block.settings.font_size }} text-{{ block.settings.color }}" {{ block.shopify_attributes }}>
                    {{- block.settings.text -}}
                  </p>
                {%- when 'title' -%}
                  <h1 class="py-{{ block.settings.vertical_padding }} font-bold text-{{ block.settings.font_size }} text-{{ block.settings.color }}" {{ block.shopify_attributes }}>
                    {{ product.title | escape }}
                  </h1>
                {%- when 'price' -%}
                  <div class="text-xl font-medium no-js-hidden text-primary dark:text-white" id="price-{{ section.id }}" {{ block.shopify_attributes }}>
                    {%- render 'price', product: product, use_variant: true, show_badges: true, price_class: 'price--large' -%}
                  </div>
                  <div {{ block.shopify_attributes }}>
                    {%- form 'product', product, id: 'product-form-installment', class: 'installment caption-large' -%}
                      <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
                      {{ form | payment_terms }}
                    {%- endform -%}
                  </div>
                {%- when 'description' -%}
                  {%- if product.description != blank -%}
                    <div class="product__description py-{{ block.settings.vertical_padding }} text-{{ block.settings.font_size }} text-{{ block.settings.color }}">
                      {{ product.description }}
                    </div>
                  {%- endif -%}
                  {%- if block.settings.show_share -%}
                    <share-button class="share-button" {{ block.shopify_attributes }}>
                      <button class="hidden share-button__button button button--tertiary">
                        {% render 'icon-share' %}
                        {{ 'general.share.share' | t }}
                      </button>
                      <details>
                        <summary class="share-button__button button button--tertiary">
                          {% render 'icon-share' %}
                          {{ 'general.share.share' | t }}
                        </summary>
                        <div class="share-button__fallback">
                          <div class="field">
                            <input type="text"
                                  class="field__input"
                                  id="url"
                                  value="{{ shop.url | append: product.url }}"
                                  placeholder="{{ 'general.share.share_url' | t }}"
                                  onclick="this.select();"
                                  readonly
                            >
                            <label class="field__label" for="url">{{ 'general.share.share_url' | t }}</label>
                          </div>
                          <button class="button button--tertiary">
                            {% render 'icon-clipboard' %}
                            {{ 'general.share.copy_to_clipboard' | t }}
                          </button>
                          <span id="ShareMessage-{{ section.id }}" class="hidden share-button__message" role="status" aria-hidden="true">
                            {{ 'general.share.success_message' | t }}
                          </span>
                        </div>
                      </details>
                    </share-button>
                    <script src="{{ 'share.js' | asset_url }}" defer="defer"></script>
                  {%- endif -%}
                {%- when 'tracklist' -%}
                  {%- if tracklist -%}
                    {% render 'track-list', tracklist: tracklist.media, block: block, product: product %}
                  {%- endif -%}
                {%- when 'collapsible_tab' -%}
                  {% render 'collapsible-tab', block: block %}
                {%- when 'popup' -%}
                  <modal-opener class="product-popup-modal__opener no-js-hidden" data-modal="#PopupModal-{{ block.id }}" {{ block.shopify_attributes }}>
                    <button id="ProductPopup-{{ block.id }}" class="product-popup-modal__button link" type="button" aria-haspopup="dialog">{{ block.settings.link_label | default: block.settings.page.title }}</button>
                  </modal-opener>
                  <a href="{{ block.settings.page.url }}" class="product-popup-modal__button link no-js">{{ block.settings.link_label }}</a>

                {%- when 'add_to_cart_form' -%}
                  {%- unless product.has_only_default_variant -%}
                    {%- if block.settings.picker_type == 'button' -%}
                      <variant-radios class="no-js-hidden" data-section="{{ section.id }}" data-url="{{ product.url }}" {{ block.shopify_attributes }}>
                        {%- for option in product.options_with_values -%}
                            <fieldset class="js product-form__input">
                                <legend class="form__label">{{ option.name }}</legend>
                                <div class="product-form__input-options {% if option.name == 'Size' %}product-form__sizes{% endif %}">
                                {%- for value in option.values -%}
                                    <input type="radio" id="{{ section.id }}-{{ option.name }}-{{ forloop.index0 }}"
                                        name="{{ option.name }}"
                                        value="{{ value | escape }}"
                                        form="product-form-{{ section.id }}"
                                        {% if option.selected_value == value %}checked{% endif %}
                                    >
                                    <label class="product-form__input-label bg-{{ block.settings.input_background_color }} text-{{ block.settings.input_color }} {% if option.name == 'Color' %}tippy{% endif %}" data-tippy-content="{{ value }}" data-value="{{ value }}" for="{{ section.id }}-{{ option.name }}-{{ forloop.index0 }}">
                                        {{ value }}
                                        <span aria-hidden="true" class="product-form__input-color"></span>
                                    </label>
                                {%- endfor -%}
                                </div>
                            </fieldset>
                        {%- endfor -%}
                        <script type="application/json">
                          {{ product.variants | json }}
                        </script>
                      </variant-radios>
                    {%- else -%}
                      <variant-selects class="no-js-hidden" data-section="{{ section.id }}" data-url="{{ product.url }}" {{ block.shopify_attributes }}>
                        {%- for option in product.options_with_values -%}
                          <div class="product-form__input product-form__input--dropdown">
                            <label class="form__label" for="Option-{{ section.id }}-{{ forloop.index0 }}">
                              {{ option.name }}
                            </label>
                            <div class="select">
                              <select id="Option-{{ section.id }}-{{ forloop.index0 }}"
                                class="select__select"
                                name="options[{{ option.name | escape }}]"
                                form="product-form-{{ section.id }}"
                              >
                                {%- for value in option.values -%}
                                  <option value="{{ value | escape }}" {% if option.selected_value == value %}selected="selected"{% endif %}>
                                    {{ value }}
                                  </option>
                                {%- endfor -%}
                              </select>
                              {% render 'icon-caret' %}
                            </div>
                          </div>
                        {%- endfor -%}

                        <script type="application/json">
                          {{ product.variants | json }}
                        </script>
                      </variant-selects>
                    {%- endif -%}
                  {%- endunless -%}

                  <noscript>
                    <div class="product-form__input{% if product.has_only_default_variant %} hidden{% endif %}">
                      <label class="form__label" for="Variants-{{ section.id }}">{{ 'products.product.product_variants' | t }}</label>
                      <div class="select">
                        <select name="id" id="Variants-{{ section.id }}" class="select__select" form="product-form">
                          {%- for variant in product.variants -%}
                            <option
                              {% if variant == product.selected_or_first_available_variant %}selected="selected"{% endif %}
                              {% if variant.available == false %}disabled{% endif %}
                              value="{{ variant.id }}"
                            >
                              {{ variant.title }}
                              {%- if variant.available == false %} - {{ 'products.product.sold_out' | t }}{% endif %}
                              - {{ variant.price | money | strip_html }}
                            </option>
                          {%- endfor -%}
                        </select>
                        {% render 'icon-caret' %}
                      </div>
                    </div>
                  </noscript>

                  {%- if block.settings.show_quantity_selector -%}
                    <div class="product-form__input product-form__quantity" {{ block.shopify_attributes }}>
                      <label class="form__label" for="Quantity-{{ section.id }}">
                        {{ 'products.product.quantity.label' | t }}
                      </label>
                      <quantity-input class="quantity border-{{ block.settings.input_background_color }}"">
                        <button class="quantity__button bg-{{ block.settings.input_background_color }} hover:bg-{{ block.settings.input_color }} text-{{ block.settings.input_color}} hover:text-{{ block.settings.input_background_color }}  no-js-hidden" name="minsu" type="button">
                          <span class="visually-hidden">{{ 'products.product.quantity.decrease' | t: product: product.title | escape }}</span>
                          {% render 'icon-minus' %}
                        </button>
                        <input 
                            class="quantity__input product-form__input-label bg-{{ block.settings.input_background_color }} text-{{ block.settings.input_color }}"
                            type="number"
                            name="quantity"
                            id="Quantity-{{ section.id }}"
                            min="1"
                            value="1"
                            form="product-form-{{ section.id }}"
                          >
                        <button class="quantity__button bg-{{ block.settings.input_background_color }} hover:bg-{{ block.settings.input_color }} text-{{ block.settings.input_color }} hover:text-{{ block.settings.input_background_color }} no-js-hidden" name="plus" type="button">
                          <span class="visually-hidden">{{ 'products.product.quantity.increase' | t: product: product.title | escape }}</span>
                          {% render 'icon-plus' %}
                        </button>
                      </quantity-input>
                    </div>
                  {%- endif -%}

                  <div {{ block.shopify_attributes }}>
                    <product-form class="product-form">
                      {%- form 'product', product, id: product_form_id, class: 'form', novalidate: 'novalidate', data-type: 'add-to-cart-form' -%}
                        <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
                        <div class="product-form__buttons">
                          <button
                            type="submit"
                            name="add"
                            class="product-form__submit bg-{{ block.settings.input_background_color }} text-{{ block.settings.input_color }} button {% if block.settings.wide_buttons %} button--full-width {% endif %} button--outline"
                          {% if product.selected_or_first_available_variant.available == false %}disabled{% endif %}
                          >
                              {%- if product.selected_or_first_available_variant.available -%}
                                {{ 'products.product.add_to_cart' | t }}
                              {%- else -%}
                                {{ 'products.product.sold_out' | t }}
                              {%- endif -%}
                          </button>
                          {%- if block.settings.show_dynamic_checkout -%}
                            {{ form | payment_button }}
                          {%- endif -%}
                        </div>
                      {%- endform -%}
                    </product-form>

                    {{ 'component-pickup-availability.css' | asset_url | stylesheet_tag }}

                    {%- assign pick_up_availabilities = product.selected_or_first_available_variant.store_availabilities | where: 'pick_up_enabled', true -%}

                    <pickup-availability class="product__pickup-availabilities no-js-hidden"
                      {% if product.selected_or_first_available_variant.available and pick_up_availabilities.size > 0 %} available{% endif %}
                      data-base-url="{{ shop.url }}{{ routes.root_url }}"
                      data-variant-id="{{ product.selected_or_first_available_variant.id }}"
                      data-has-only-default-variant="{{ product.has_only_default_variant }}"
                    >
                      <template>
                        <pickup-availability-preview class="pickup-availability-preview">
                          {% render 'icon-unavailable' %}
                          <div class="pickup-availability-info">
                            <p class="caption-large">{{ 'products.product.pickup_availability.unavailable' | t }}</p>
                            <button class="pickup-availability-button link link--text underlined-link">{{ 'products.product.pickup_availability.refresh' | t }}</button>
                          </div>
                        </div>
                      </template>
                    </pickup-availability>
                  </div>

                  <script src="{{ 'pickup-availability.js' | asset_url }}" defer="defer"></script>

              {%- endcase -%}
            {%- endfor -%}
          </div>
        </div>
      </div>

    </div><!-- end of layout-->

  {%- render 'cart-notification' -%}

  <product-modal id="ProductModal-{{ section.id }}" class="product-media-modal">
    <div class="product-media-modal__dialog" role="dialog" aria-label="{{ 'products.modal.label' | t }}" aria-modal="true" tabindex="-1">
      <button id="ModalClose-{{ section.id }}" type="button" class="product-media-modal__toggle" aria-label="{{ 'accessibility.close' | t }}">{% render 'icon-close' %}</button>

      <div class="product-media-modal__content" role="document" aria-label="{{ 'products.modal.label' | t }}" tabindex="0">
        {%- for media in product.media -%}
          {%- if media.media_type == 'image' -%}
            <img
              srcset="{%- if media.preview_image.width >= 550 -%}{{ media.preview_image | image_url: '550x' }} 550w,{%- endif -%}
                      {%- if media.preview_image.width >= 1100 -%}{{ media.preview_image | image_url: '1100x' }} 1100w,{%- endif -%}
                      {%- if media.preview_image.width >= 1680 -%}{{ media.preview_image | image_url: '1680x' }} 1680w,{%- endif -%}
                      {%- if media.preview_image.width >= 2048 -%}{{ media.preview_image | image_url: '2048x' }} 2048w,{%- endif -%}
                      {%- if media.preview_image.width >= 4096 -%}{{ media.preview_image | image_url: '4096x' }} 4096w{%- endif -%}"
              sizes="(min-width: 750px) calc(100vw - 12rem), 100vw"
              src="{{ media.preview_image | image_url: '750x' }}"
              alt="{{ media.alt | escape }}"
              loading="lazy"
              width="1100"
              height="{{ 1100 | divided_by: media.preview_image.aspect_ratio | ceil }}"
              data-media-id="{{ media.id }}"
            >
          {%- else -%}
            {%- if media.media_type == 'model' -%}
              <div class="product-media-modal__model" data-media-id="{{ media.id }}">
                <product-model class="deferred-media media" style="padding-top: min(calc(100vh - 12rem), 100%)">
            {%- else -%}
              <deferred-media class="deferred-media media" style="padding-top: min(calc(100vh - 12rem), {{ 1 | divided_by: media.aspect_ratio | times: 100 }}%)" data-media-id="{{ media.id }}">
            {%- endif -%}

              <button id="Deferred-Poster-Modal-{{ media.id }}" class="deferred-media__poster" type="button">
                <span class="deferred-media__poster-button motion-reduce">
                  {%- if media.media_type == 'model' -%}
                    {%- render 'icon-3d-model' -%}
                  {%- else -%}
                    {%- render 'icon-play' -%}
                  {%- endif -%}
                </span>
                <img
                  srcset="{% if media.preview_image.width >= 288 %}{{ media.preview_image | image_url: '288x' }} 288w,{% endif %}
                          {% if media.preview_image.width >= 576 %}{{ media.preview_image | image_url: '576x' }} 576w,{% endif %}
                          {% if media.preview_image.width >= 550 %}{{ media.preview_image | image_url: '550x' }} 550w,{% endif %}
                          {% if media.preview_image.width >= 1100 %}{{ media.preview_image | image_url: '1100x' }} 1100w{% endif %}"
                  src="{{ media | image_url: '550x550' }}"
                  sizes="(min-width: 1200px) calc((1200px - 10rem) / 2), (min-width: 750px) calc((100vw - 11.5rem) / 2), calc(100vw - 4rem)"
                  loading="lazy"
                  width="576"
                  height="{{ 576 | divided_by: media.preview_image.aspect_ratio }}"
                  alt="{{ media.preview_image.alt | escape }}"
                >
              </button>
              <template>
                {%- case media.media_type -%}
                {%- when 'external_video' -%}
                  {%- assign video_class = 'js-' | append: media.host -%}
                  {%- if media.host == 'youtube' -%}
                    {{ media | external_video_url: autoplay: true, loop: section.settings.enable_video_looping, playlist: media.external_id | external_video_tag: class: video_class, loading: "lazy" }}
                  {%- else -%}
                    {{ media | external_video_url: autoplay: true, loop: section.settings.enable_video_looping | external_video_tag: class: video_class, loading: "lazy" }}
                  {%- endif -%}
                {%- when 'video' -%}
                  {{ media | media_tag: image_size: "2048x", autoplay: true, loop: section.settings.enable_video_looping, controls: true, preload: "none", autoplay: true }}
                {%- when 'model' -%}
                  {{ media | media_tag: image_size: "2048x", toggleable: true }}
                {%- endcase -%}
              </template>

            {%- if media.media_type == 'model' -%}
                </product-model>
                <button
                  class="button button--full-width product__xr-button"
                  type="button"
                  aria-label="{{ 'products.product.xr_button_label' | t }}"
                  data-shopify-xr
                  data-shopify-model3d-id="{{ media.id }}"
                  data-shopify-title="title"
                  data-shopify-xr-hidden
                  >
                  {% render 'icon-3d-model' %}
                  {{ 'products.product.xr_button' | t }}
                </button>
              </div>
            {%- else -%}
              </deferred-media>
            {%- endif -%}
          {%- endif -%}
        {%- endfor -%}
      </div>
    </div>
  </product-modal>

  {% assign popups = section.blocks | where: "type", "popup" %}
  {%- for block in popups -%}
    <modal-dialog id="PopupModal-{{ block.id }}" class="product-popup-modal" {{ block.shopify_attributes }}>
      <div role="dialog" aria-label="{{ block.settings.link_label }}" aria-modal="true" class="product-popup-modal__content" tabindex="-1">
        <button id="ModalClose-{{ block.id }}" type="button" class="product-popup-modal__toggle" aria-label="{{ 'accessibility.close' | t }}">{% render 'icon-close' %}</button>
        <div class="product-popup-modal__content-info">
          <h1 class="h2">{{ block.settings.page.title }}</h1>
          {{ block.settings.page.content }}
        </div>
      </div>
    </modal-dialog>
  {%- endfor -%}
</section>

{% javascript %}

  class ProductModal extends ModalDialog {
    constructor() {
      super();
    }

    hide() {
      super.hide();
      window.pauseAllMedia();
    }

    show(opener) {
      super.show(opener);
      this.showActiveMedia();
    }

    showActiveMedia() {
      this.querySelectorAll(`[data-media-id]:not([data-media-id="${this.openedBy.getAttribute("data-media-id")}"])`).forEach((element) => {
          element.classList.remove('active');
        }
      )
      const activeMedia = this.querySelector(`[data-media-id="${this.openedBy.getAttribute("data-media-id")}"]`);
      activeMedia.classList.add('active');
      activeMedia.scrollIntoView();

      if (activeMedia.nodeName == 'DEFERRED-MEDIA' && activeMedia.querySelector('template')?.content?.querySelector('.js-youtube'))
        activeMedia.loadContent();
    }
  }

  customElements.define('product-modal', ProductModal);
{% endjavascript %}

{%- if first_3d_model -%}
  <script type="application/json" id="ProductJSON-{{ product.id }}">
    {{ product.media | where: 'media_type', 'model' | json }}
  </script>

  <script src="{{ 'product-model.js' | asset_url }}" defer></script>
{%- endif -%}

{% schema %}
{
  "name": "t:sections.product-details.name",
  "tag": "section",
  "class": "product-section spaced-section",
  "blocks": [
    {
      "type": "@app"
    },
    {
      "type": "text",
      "name": "t:sections.main-product.blocks.text.name",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "default": "Text block",
          "label": "t:sections.main-product.blocks.text.settings.text.label"
        },
        {
          "type": "range",
          "id": "font_size",
          "min": 1,
          "max": 8,
          "step": 1,
          "default": 2,
          "label": "t:sections.common.settings.font_size.label"
        },
        {
          "type": "select",
          "id": "color",
          "default": "text-primary",
          "label": "t:sections.common.settings.color.label",
          "options": [
            {
              "value": "primary",
              "label": "t:settings_schema.colors.settings.color_primary.label"
            },
            {
              "value": "secondary",
              "label": "t:settings_schema.colors.settings.color_secondary.label"
            },
            {
              "value": "accent",
              "label": "t:settings_schema.colors.settings.color_accent.label"
            },
            {
              "value": "background-primary",
              "label": "t:settings_schema.colors.settings.color_background_primary.label"
            },
            {
              "value": "background-secondary",
              "label": "t:settings_schema.colors.settings.color_background_secondary.label"
            },
            {
              "value": "text-primary",
              "label": "t:settings_schema.colors.settings.color_text_primary.label"
            },
            {
              "value": "text-secondary",
              "label": "t:settings_schema.colors.settings.color_text_secondary.label"
            },
            {
              "value": "border",
              "label": "t:settings_schema.colors.settings.color_border.label"
            }
          ]
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__3.label"
            }
          ],
          "default": "body",
          "label": "t:sections.main-product.blocks.text.settings.text_style.label"
        },
        {
          "type": "range",
          "id": "vertical_padding",
          "min": 0,
          "max": 10,
          "step": 1,
          "default": 2,
          "label": "t:sections.common.settings.vertical_padding.label"
        }
      ]
    },
    {
      "type": "title",
      "name": "t:sections.main-product.blocks.title.name",
      "limit": 1,
      "settings": [
        {
          "type": "range",
          "id": "font_size",
          "min": 1,
          "max": 8,
          "step": 1,
          "default": 3,
          "label": "t:sections.common.settings.font_size.label"
        },
        {
          "type": "select",
          "id": "color",
          "default": "primary",
          "label": "t:sections.common.settings.color.label",
          "options": [
            {
              "value": "primary",
              "label": "t:settings_schema.colors.settings.color_primary.label"
            },
            {
              "value": "secondary",
              "label": "t:settings_schema.colors.settings.color_secondary.label"
            },
            {
              "value": "accent",
              "label": "t:settings_schema.colors.settings.color_accent.label"
            },
            {
              "value": "background-primary",
              "label": "t:settings_schema.colors.settings.color_background_primary.label"
            },
            {
              "value": "background-secondary",
              "label": "t:settings_schema.colors.settings.color_background_secondary.label"
            },
            {
              "value": "text-primary",
              "label": "t:settings_schema.colors.settings.color_text_primary.label"
            },
            {
              "value": "text-secondary",
              "label": "t:settings_schema.colors.settings.color_text_secondary.label"
            },
            {
              "value": "border",
              "label": "t:settings_schema.colors.settings.color_border.label"
            }
          ]
        },
        {
          "type": "range",
          "id": "vertical_padding",
          "min": 0,
          "max": 10,
          "step": 1,
          "default": 2,
          "label": "t:sections.common.settings.vertical_padding.label"
        }
      ]
    },
    {
      "type": "price",
      "name": "t:sections.main-product.blocks.price.name",
      "limit": 1
    },
    {
      "type": "add_to_cart_form",
      "name": "t:sections.main-product.blocks.add_to_cart_form.name",
      "limit": 1,
      "settings": [
        {
          "type": "checkbox",
          "id": "show_dynamic_checkout",
          "default": true,
          "label": "t:sections.main-product.blocks.add_to_cart_form.settings.show_dynamic_checkout.label",
          "info": "t:sections.main-product.blocks.add_to_cart_form.settings.show_dynamic_checkout.info"
        },
        {
          "type": "checkbox",
          "id": "wide_buttons",
          "default": true,
          "label": "t:sections.main-product.blocks.add_to_cart_form.settings.wide_buttons.label",
          "info": "t:sections.main-product.blocks.add_to_cart_form.settings.wide_buttons.info"
        },
        {
          "type": "checkbox",
          "id": "show_quantity_selector",
          "default": true,
          "label": "t:sections.main-product.blocks.add_to_cart_form.settings.show_quantity_selector.label"
        },
        {
          "type": "select",
          "id": "picker_type",
          "options": [
            {
              "value": "dropdown",
              "label": "t:sections.main-product.blocks.add_to_cart_form.settings.picker_type.options__1.label"
            },
            {
              "value": "button",
              "label": "t:sections.main-product.blocks.add_to_cart_form.settings.picker_type.options__2.label"
            }
          ],
          "default": "button",
          "label": "t:sections.main-product.blocks.add_to_cart_form.settings.picker_type.label"
        },
        {
          "type": "select",
          "id": "input_background_color",
          "default": "background-secondary",
          "label": "t:sections.main-product.blocks.add_to_cart_form.settings.input_background_color.label",
          "options": [
            {
              "value": "transparent",
              "label": "t:settings_schema.colors.settings.color_transparent.label"
            },
            {
              "value": "primary",
              "label": "t:settings_schema.colors.settings.color_primary.label"
            },
            {
              "value": "secondary",
              "label": "t:settings_schema.colors.settings.color_secondary.label"
            },
            {
              "value": "accent",
              "label": "t:settings_schema.colors.settings.color_accent.label"
            },
            {
              "value": "background-primary",
              "label": "t:settings_schema.colors.settings.color_background_primary.label"
            },
            {
              "value": "background-secondary",
              "label": "t:settings_schema.colors.settings.color_background_secondary.label"
            },
            {
              "value": "text-primary",
              "label": "t:settings_schema.colors.settings.color_text_primary.label"
            },
            {
              "value": "text-secondary",
              "label": "t:settings_schema.colors.settings.color_text_secondary.label"
            },
            {
              "value": "border",
              "label": "t:settings_schema.colors.settings.color_border.label"
            }
          ]
        },
        {
          "type": "select",
          "id": "input_color",
          "default": "text-secondary",
          "label": "t:sections.main-product.blocks.add_to_cart_form.settings.input_color.label",
          "options": [
            {
              "value": "transparent",
              "label": "t:settings_schema.colors.settings.color_transparent.label"
            },
            {
              "value": "primary",
              "label": "t:settings_schema.colors.settings.color_primary.label"
            },
            {
              "value": "secondary",
              "label": "t:settings_schema.colors.settings.color_secondary.label"
            },
            {
              "value": "accent",
              "label": "t:settings_schema.colors.settings.color_accent.label"
            },
            {
              "value": "background-primary",
              "label": "t:settings_schema.colors.settings.color_background_primary.label"
            },
            {
              "value": "background-secondary",
              "label": "t:settings_schema.colors.settings.color_background_secondary.label"
            },
            {
              "value": "text-primary",
              "label": "t:settings_schema.colors.settings.color_text_primary.label"
            },
            {
              "value": "text-secondary",
              "label": "t:settings_schema.colors.settings.color_text_secondary.label"
            },
            {
              "value": "border",
              "label": "t:settings_schema.colors.settings.color_border.label"
            }
          ]
        }

      ]
    },
    {
      "type": "description",
      "name": "t:sections.main-product.blocks.description.name",
      "limit": 1,
      "settings": [
        {
          "type": "checkbox",
          "id": "show_share",
          "default": true,
          "label": "t:sections.main-product.blocks.description.settings.show_share.label"
        },
        {
          "type": "range",
          "id": "font_size",
          "min": 1,
          "max": 8,
          "step": 1,
          "default": 3,
          "label": "t:sections.common.settings.font_size.label"
        },
        {
          "type": "select",
          "id": "color",
          "default": "text-primary",
          "label": "t:sections.common.settings.color.label",
          "options": [
            {
              "value": "primary",
              "label": "t:settings_schema.colors.settings.color_primary.label"
            },
            {
              "value": "secondary",
              "label": "t:settings_schema.colors.settings.color_secondary.label"
            },
            {
              "value": "accent",
              "label": "t:settings_schema.colors.settings.color_accent.label"
            },
            {
              "value": "background-primary",
              "label": "t:settings_schema.colors.settings.color_background_primary.label"
            },
            {
              "value": "background-secondary",
              "label": "t:settings_schema.colors.settings.color_background_secondary.label"
            },
            {
              "value": "text-primary",
              "label": "t:settings_schema.colors.settings.color_text_primary.label"
            },
            {
              "value": "text-secondary",
              "label": "t:settings_schema.colors.settings.color_text_secondary.label"
            },
            {
              "value": "border",
              "label": "t:settings_schema.colors.settings.color_border.label"
            }
          ]
        },
        {
          "type": "range",
          "id": "vertical_padding",
          "min": 0,
          "max": 10,
          "step": 1,
          "default": 2,
          "label": "t:sections.common.settings.vertical_padding.label"
        },
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.description.settings.share_featured_image_info.content"
        },
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.description.settings.share_title_info.content"
        }
      ]
    },
    {
      "type": "tracklist",
      "name": "t:sections.main-product.blocks.tracklist.name",
      "settings": [
        {
          "type": "text",
          "id": "heading",
          "label": "t:sections.main-product.blocks.tracklist.settings.heading.label"
        },
        {
          "type": "select",
          "id": "heading_font_size",
          "label": "t:sections.main-product.blocks.tracklist.settings.heading_font_size.label",
          "options": [
            {
              "value": "xs",
              "label": "t:settings_schema.typography.settings.header__xs.label"
            },
            {
              "value": "sm",
              "label": "t:settings_schema.typography.settings.header__sm.label"
            },
            {
              "value": "base",
              "label": "t:settings_schema.typography.settings.header__base.label"
            },
            {
              "value": "lg",
              "label": "t:settings_schema.typography.settings.header__lg.label"
            },
            {
              "value": "xl",
              "label": "t:settings_schema.typography.settings.header__xl.label"
            }
          ],
          "default": "base"
        },
        {
          "type": "select",
          "id": "heading_color",
          "default": "primary",
          "label": "t:sections.common.settings.heading_color.label",
          "options": [
            {
              "value": "primary",
              "label": "t:settings_schema.colors.settings.color_primary.label"
            },
            {
              "value": "secondary",
              "label": "t:settings_schema.colors.settings.color_secondary.label"
            },
            {
              "value": "accent",
              "label": "t:settings_schema.colors.settings.color_accent.label"
            },
            {
              "value": "background-primary",
              "label": "t:settings_schema.colors.settings.color_background_primary.label"
            },
            {
              "value": "background-secondary",
              "label": "t:settings_schema.colors.settings.color_background_secondary.label"
            },
            {
              "value": "text-primary",
              "label": "t:settings_schema.colors.settings.color_text_primary.label"
            },
            {
              "value": "text-secondary",
              "label": "t:settings_schema.colors.settings.color_text_secondary.label"
            },
            {
              "value": "border",
              "label": "t:settings_schema.colors.settings.color_border.label"
            }
          ]
        },
        {
          "type": "select",
          "id": "content_font_size",
          "label": "t:sections.main-product.blocks.tracklist.settings.content_font_size.label",
          "options": [
            {
              "value": "xs",
              "label": "t:settings_schema.typography.settings.header__xs.label"
            },
            {
              "value": "sm",
              "label": "t:settings_schema.typography.settings.header__sm.label"
            },
            {
              "value": "base",
              "label": "t:settings_schema.typography.settings.header__base.label"
            },
            {
              "value": "lg",
              "label": "t:settings_schema.typography.settings.header__lg.label"
            },
            {
              "value": "xl",
              "label": "t:settings_schema.typography.settings.header__xl.label"
            }
          ],
          "default": "sm"
        },
        {
          "type": "select",
          "id": "content_color",
          "label": "t:sections.common.settings.content_color.label",
          "default": "text-secondary",
          "options": [
            {
              "value": "primary",
              "label": "t:settings_schema.colors.settings.color_primary.label"
            },
            {
              "value": "secondary",
              "label": "t:settings_schema.colors.settings.color_secondary.label"
            },
            {
              "value": "accent",
              "label": "t:settings_schema.colors.settings.color_accent.label"
            },
            {
              "value": "background-primary",
              "label": "t:settings_schema.colors.settings.color_background_primary.label"
            },
            {
              "value": "background-secondary",
              "label": "t:settings_schema.colors.settings.color_background_secondary.label"
            },
            {
              "value": "text-primary",
              "label": "t:settings_schema.colors.settings.color_text_primary.label"
            },
            {
              "value": "text-secondary",
              "label": "t:settings_schema.colors.settings.color_text_secondary.label"
            },
            {
              "value": "border",
              "label": "t:settings_schema.colors.settings.color_border.label"
            }
          ]
        },
        {
          "type": "range",
          "id": "vertical_padding",
          "min": 0,
          "max": 10,
          "step": 1,
          "default": 2,
          "label": "t:sections.common.settings.vertical_padding.label"
        },
        {
          "type": "text",
          "id": "track_number_suffix",
          "default": ".",
          "label": "t:sections.main-product.blocks.tracklist.settings.track_number_suffix.label"
        },
        {
          "type": "select",
          "id": "display",
          "options": [
            {
              "value": "default",
              "label": "t:sections.main-product.blocks.tracklist.settings.display.options__default.label"
            },
            {
              "value": "collapsible_tab",
              "label": "t:sections.main-product.blocks.tracklist.settings.display.options__collapsible_tab.label"
            },
            {
              "value": "popup",
              "label": "t:sections.main-product.blocks.tracklist.settings.display.options__popup.label"
            }
          ],
          "default": "default",
          "label": "t:sections.main-product.blocks.tracklist.settings.display.label"
        }
      ]
    },
    {
      "type": "collapsible_tab",
      "name": "t:sections.main-product.blocks.collapsible_tab.name",
      "settings": [
        {
          "type": "text",
          "id": "heading",
          "default": "Collapsible tab",
          "info": "t:sections.main-product.blocks.collapsible_tab.settings.heading.info",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.heading.label"
        },
        {
          "type": "range",
          "id": "heading_font_size",
          "min": 1,
          "max": 8,
          "step": 1,
          "default": 1,
          "label": "t:sections.common.settings.heading_font_size.label"
        },
        {
          "type": "select",
          "id": "heading_color",
          "default": "primary",
          "label": "t:sections.common.settings.heading_color.label",
          "options": [
            {
              "value": "primary",
              "label": "t:settings_schema.colors.settings.color_primary.label"
            },
            {
              "value": "secondary",
              "label": "t:settings_schema.colors.settings.color_secondary.label"
            },
            {
              "value": "accent",
              "label": "t:settings_schema.colors.settings.color_accent.label"
            },
            {
              "value": "background-primary",
              "label": "t:settings_schema.colors.settings.color_background_primary.label"
            },
            {
              "value": "background-secondary",
              "label": "t:settings_schema.colors.settings.color_background_secondary.label"
            },
            {
              "value": "text-primary",
              "label": "t:settings_schema.colors.settings.color_text_primary.label"
            },
            {
              "value": "text-secondary",
              "label": "t:settings_schema.colors.settings.color_text_secondary.label"
            },
            {
              "value": "border",
              "label": "t:settings_schema.colors.settings.color_border.label"
            }
          ]
        },
        {
          "type": "richtext",
          "id": "content",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.content.label"
        },
        {
          "type": "range",
          "id": "content_font_size",
          "min": 1,
          "max": 8,
          "step": 1,
          "default": 1,
          "label": "t:sections.common.settings.content_font_size.label"
        },
        {
          "type": "select",
          "id": "content_color",
          "label": "t:sections.common.settings.content_color.label",
          "default": "text-secondary",
          "options": [
            {
              "value": "primary",
              "label": "t:settings_schema.colors.settings.color_primary.label"
            },
            {
              "value": "secondary",
              "label": "t:settings_schema.colors.settings.color_secondary.label"
            },
            {
              "value": "accent",
              "label": "t:settings_schema.colors.settings.color_accent.label"
            },
            {
              "value": "background-primary",
              "label": "t:settings_schema.colors.settings.color_background_primary.label"
            },
            {
              "value": "background-secondary",
              "label": "t:settings_schema.colors.settings.color_background_secondary.label"
            },
            {
              "value": "text-primary",
              "label": "t:settings_schema.colors.settings.color_text_primary.label"
            },
            {
              "value": "text-secondary",
              "label": "t:settings_schema.colors.settings.color_text_secondary.label"
            },
            {
              "value": "border",
              "label": "t:settings_schema.colors.settings.color_border.label"
            }
          ]
        },
        {
          "type": "range",
          "id": "vertical_padding",
          "min": 0,
          "max": 10,
          "step": 1,
          "default": 2,
          "label": "t:sections.common.settings.vertical_padding.label"
        },
        {
          "type": "page",
          "id": "page",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.page.label"
        },
        {
          "type": "select",
          "id": "icon",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            }
          ],
          "default": "none",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.label"
        }
      ]
    },
    {
      "type": "popup",
      "name": "t:sections.main-product.blocks.popup.name",
      "settings": [
        {
          "type": "text",
          "id": "link_label",
          "default": "Pop-up link text",
          "label": "t:sections.main-product.blocks.popup.settings.link_label.label"
        },
        {
          "id": "page",
          "type": "page",
          "label": "t:sections.main-product.blocks.popup.settings.page.label"
        }
      ]
    },
    {
      "type": "separator",
      "name": "t:sections.main-product.blocks.separator.name",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.separator.settings.description.content"
        },
        {
          "type": "header",
          "content": "t:sections.main-product.blocks.separator.settings.notice.content"
        },
        {
          "id": "border",
          "default": true,
          "type": "checkbox",
          "label": "t:sections.main-product.blocks.separator.settings.border.label"
        },
        {
          "id": "border_color",
          "default": "primary",
          "type": "select",
          "label": "t:sections.main-product.blocks.separator.settings.border_color.label",
          "options": [
            {
              "value": "primary",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__primary.label"
            },
            {
              "value": "secondary",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__secondary.label"
            },
            {
              "value": "text",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__text.label"
            }
          ]
        }
      ]
    }
  ],
  "settings": [
    {
      "type": "header",
      "content": "t:sections.product-details.settings.header.content",
      "info": "t:sections.product-details.settings.header.info"
    },
    {
      "type": "select",
      "id": "layout",
      "default": "images_left",
      "label": "t:sections.product-details.settings.layout.label",
      "options": [
        {
          "value": "images_left",
          "label": "t:sections.product-details.settings.layout.options__images_left.label"
        },
        {
          "value": "images_right",
          "label": "t:sections.product-details.settings.layout.options__images_right.label"
        },
        {
          "value": "stacked",
          "label": "t:sections.product-details.settings.layout.options__stacked.label"
        }
      ]
    },
    {
      "type": "checkbox",
      "id": "enable_sticky_info",
      "default": true,
      "label": "t:sections.main-product.settings.enable_sticky_info.label"
    },
    {
      "type": "checkbox",
      "id": "enable_video_looping",
      "default": false,
      "label": "t:sections.main-product.settings.enable_video_looping.label"
    }
  ]
}
{% endschema %}
